#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç —Ñ–∏–∫—Ç–∏–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ API –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */

async function testFakeDataOnly() {
  console.log('üé≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–∫—Ç–∏–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...\n');

  try {
    // Test enhanced stats endpoint
    console.log('1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/stats/enhanced...');
    const enhancedResponse = await fetch('http://localhost:10112/api/stats/enhanced');

    if (enhancedResponse.ok) {
      const enhancedData = await enhancedResponse.json();
      console.log('‚úÖ Enhanced stats API —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log(`   - –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${enhancedData.data.totalUsers}`);
      console.log(`   - –û–Ω–ª–∞–π–Ω: ${enhancedData.data.onlineUsers}`);
      console.log(`   - –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ${enhancedData.data.isRealData ? '–î–∞' : '–ù–µ—Ç'}`);
      console.log(`   - –ò—Å—Ç–æ—á–Ω–∏–∫: ${enhancedData.data.dataSource}`);

      if (enhancedData.data.isRealData) {
        console.log('‚ùå –û–®–ò–ë–ö–ê: Enhanced stats –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!');
      } else {
        console.log('‚úÖ Enhanced stats –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
      }
    } else {
      console.log('‚ùå Enhanced stats API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    }

    console.log('');

    // Test fake stats endpoint
    console.log('2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/stats/fake...');
    const fakeResponse = await fetch('http://localhost:10112/api/stats/fake');

    if (fakeResponse.ok) {
      const fakeData = await fakeResponse.json();
      console.log('‚úÖ Fake stats API —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log(`   - –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${fakeData.data.totalUsers}`);
      console.log(`   - –û–Ω–ª–∞–π–Ω: ${fakeData.data.onlineUsers}`);
      console.log(`   - –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ${fakeData.data.isRealData ? '–î–∞' : '–ù–µ—Ç'}`);
      console.log(`   - –ò—Å—Ç–æ—á–Ω–∏–∫: ${fakeData.data.dataSource}`);

      if (fakeData.data.isRealData) {
        console.log('‚ùå –û–®–ò–ë–ö–ê: Fake stats –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!');
      } else {
        console.log('‚úÖ Fake stats –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
      }
    } else {
      console.log('‚ùå Fake stats API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    }

    console.log('');

    // Test simple stats endpoint
    console.log('3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/stats/simple...');
    const simpleResponse = await fetch('http://localhost:10112/api/stats/simple');

    if (simpleResponse.ok) {
      const simpleData = await simpleResponse.json();
      console.log('‚úÖ Simple stats API —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log(`   - –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${simpleData.data.totalUsers}`);
      console.log(`   - –û–Ω–ª–∞–π–Ω: ${simpleData.data.onlineUsers}`);
      console.log(`   - –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ${simpleData.data.isRealData ? '–î–∞' : '–ù–µ—Ç'}`);
      console.log(`   - –ò—Å—Ç–æ—á–Ω–∏–∫: ${simpleData.data.dataSource}`);

      if (simpleData.data.isRealData) {
        console.log('‚ùå –û–®–ò–ë–ö–ê: Simple stats –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!');
      } else {
        console.log('‚úÖ Simple stats –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
      }
    } else {
      console.log('‚ùå Simple stats API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    }

    console.log('\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('–í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
    console.log('isRealData –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å false, dataSource –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å "calculated"');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

// Run the test
testFakeDataOnly().catch(console.error);
